package net.emof.building.web.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import net.emof.building.admin.customEXC.EhCacheSessiconException;
import net.emof.building.ehcache.EhSessicon;
import net.emof.building.util.DataMap;
import net.emof.building.web.service.ConfsBrief_web_Service;

/**
 * 简报列表
 * 
 * @author baikun
 * @creation 2017年12月20日
 */
@Controller
@RequestMapping("/confsbrief_web")
public class ConfsBrief_web_Controller {

	@Autowired
	private ConfsBrief_web_Service srv;

	/**
	 * 简报列表
	 * 
	 * @author baikun
	 * @creation 2017年12月20日
	 * @param token
	 * @param page
	 * @param display
	 * @return
	 */
	@ResponseBody
	@RequestMapping("")
	public Map<String, Object> getList(String token, @RequestParam(value = "page", required = false) Integer page,
			@RequestParam(value = "display", required = false) Integer display,
			@RequestParam(value = "type", required = false) Integer type,
			@RequestParam(value = "confsid", required = false) String confsid) {
		try {
			
			
			
			return srv.pageList(EhSessicon.getTokenInfo(token), page, display, confsid, type).data;
		
		} catch (EhCacheSessiconException e) {

			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}
	}

	/**
	 * 添加简报
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param token
	 * @param bname
	 * @param introd
	 * @param imgs
	 * @param confsid
	 * @return
	 */
	@ResponseBody
	@RequestMapping("addinfo")
	public Map<String, Object> add_info(String token, @RequestParam(value = "bname", required = false) String bname,
			@RequestParam(value = "introd", required = false) String introd,
			@RequestParam(value = "imgs", required = false) String imgs,
			@RequestParam(value = "confsid", required = false) String confsid,
			@RequestParam(value = "id", required = false) String id) {
		System.out.println("--00--");
		try {
			//EhSessicon.getTokenInfo(token)

			System.out.println(EhSessicon.getTokenInfo(token)+"=22==="+id+"==="+ bname+"==="+ introd);
			if(null==id||id.equals("")) {
			 	return srv.add_info(bname, introd, "", confsid, EhSessicon.getTokenInfo(token)).data;
			} else {
				System.out.println("===="+id+"==="+ bname+"==="+ introd);
				return srv.update_info(id, bname, introd, "").data;
			}

		} catch (EhCacheSessiconException e) {
			return new DataMap(null, 5, "登陆超时请重新登陆1").data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆2").data;
		}
	}
	/**
	 * 简报详情
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("getinfo")
	public Map<String, Object> get_info(@RequestParam(value = "id", required = false) String id) {

		try {
			return srv.getInfo(id).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}
	}

	/**
	 * 删除简报
	 * 
	 * @author wkx
	 * @creation 2018年5月24日
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("deleteinfo")
	public Map<String, Object> delete_info(@RequestParam(value = "id", required = false) String id) {
		try {
			return srv.delete_info(id).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}

	}

	/**
	 * 修改简报
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param bname 简报名称
	 * @param introd 介绍
	 * @param imgs 图片（多张图片已,分割）
	 * @param id 简报id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("updateinfo")
	public Map<String, Object> update_info(@RequestParam(value = "bname", required = false) String bname,
			@RequestParam(value = "introd", required = false) String introd,
			@RequestParam(value = "imgs", required = false) String imgs,
			@RequestParam(value = "id", required = false) String id) {
		try {  
			return srv.update_info(id, bname, introd, imgs).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}

	}
	

}
