package net.emof.building.web.controller;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import net.emof.building.admin.customEXC.EhCacheSessiconException;
import net.emof.building.ehcache.EhSessicon;
import net.emof.building.model.Users;
import net.emof.building.util.DataMap;
import net.emof.building.util.PageInfo;
import net.emof.building.web.service.ConfsBrief_web_Service;

/**
 * 简报列表
 * 
 * @author baikun
 * @creation 2017年12月20日
 */
@Controller
@RequestMapping("/confsbrief_web")
public class ConfsBrief_web_Controller {

	@Autowired
	private ConfsBrief_web_Service srv;

	/**
	 * 简报列表
	 * 
	 * @author baikun
	 * @creation 2017年12月20日
	 * @param token
	 * @param page
	 * @param display
	 * @return
	 */
	@ResponseBody
	@RequestMapping("")
	public Map<String, Object> getList(String token, @RequestParam(value = "page", required = false) Integer page,
			@RequestParam(value = "display", required = false) Integer display,
			@RequestParam(value = "type", required = false) Integer type,
			@RequestParam(value = "confsid", required = false) String confsid) {
		try {
			
			
			
			return srv.pageList(EhSessicon.getTokenInfo(token), page, display, confsid, type).data;
		
		} catch (EhCacheSessiconException e) {

			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}
	}

	/**
	 * 添加简报
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param token
	 * @param bname
	 * @param introd
	 * @param imgs
	 * @param confsid
	 * @return
	 */
	@ResponseBody
	@RequestMapping("addinfo")
	public Map<String, Object> add_info(String token, @RequestParam(value = "bname", required = false) String bname,
			@RequestParam(value = "introd", required = false) String introd,
			@RequestParam(value = "imgs", required = false) String imgs,
			@RequestParam(value = "confsid", required = false) String confsid,
			@RequestParam(value = "id", required = false) String id) {
		try {
			//EhSessicon.getTokenInfo(token)
			if(null==id||id.equals("")) {
			 	return srv.add_info(bname, introd, "", confsid, EhSessicon.getTokenInfo(token)).data;
			} else {
				return srv.update_info(id, bname, introd, "").data;
			}

		} catch (EhCacheSessiconException e) {
			return new DataMap(null, 5, "登陆超时请重新登陆1").data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆2").data;
		}
	}
	/**
	 * 简报详情
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("getinfo")
	public Map<String, Object> get_info(@RequestParam(value = "id", required = false) String id) {

		try {
			return srv.getInfo(id).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}
	}

	/**
	 * 简报详情
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("getinfoPc")
	public Map<String, Object> get_infoPc(@RequestParam(value = "id", required = false) String id) {
		try {
			return srv.getInfoPc(id).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}
	}
	
	/**
	 * 
	 * @author 简报推广统计  wkx
	 * @creation 2018年6月28日
	 * @param page
	 * @param display
	 * @param response
	 * @param sort
	 * @param sortOrder
	 * @param request
	 * @param select
	 * @param agodate
	 * @param backdate
	 * @return
	 * @throws Exception
	 */
	@ResponseBody
	@RequestMapping("table_init")
	public Map<String, Object> table_init(String token,PageInfo pageInfo,
			@RequestParam(value = "page", required = false) Integer page,
			@RequestParam(value = "display", required = false) Integer display, 
			HttpServletResponse response, String sort,
			String sortOrder, HttpServletRequest request,
			@RequestParam(value = "select", required = false) String select,
			@RequestParam(value = "startdate", required = false) String agodate,
			@RequestParam(value = "overdate", required = false) String backdate) {
		Users aduser = null;
		
		try {
			aduser = EhSessicon.getTokenInfo(token);
		} catch (Exception e) {
			return new DataMap(null, 5, "查询失败").data;
		}
		if (aduser == null) {
			return new DataMap(null, 6, "登陆超时,请重新登陆").data;
		}
		Map<String, Object> map_res = srv.pagelist(pageInfo,display.toString(),page.toString(), select, sort, sortOrder, agodate, backdate,aduser).data;
		return map_res;
	}
	
	
	
	/**
	 * 删除简报
	 * 
	 * @author wkx
	 * @creation 2018年5月24日
	 * @param id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("deleteinfo")
	public Map<String, Object> delete_info(@RequestParam(value = "id", required = false) String id) {
		try {
			return srv.delete_info(id).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}

	}

	/**
	 * 修改简报
	 * 
	 * @author baikun
	 * @creation 2017年12月22日
	 * @param bname 简报名称
	 * @param introd 介绍
	 * @param imgs 图片（多张图片已,分割）
	 * @param id 简报id
	 * @return
	 */
	@ResponseBody
	@RequestMapping("updateinfo")
	public Map<String, Object> update_info(@RequestParam(value = "bname", required = false) String bname,
			@RequestParam(value = "introd", required = false) String introd,
			@RequestParam(value = "imgs", required = false) String imgs,
			@RequestParam(value = "id", required = false) String id) {
		try {  
			return srv.update_info(id, bname, introd, imgs).data;
		} catch (Exception e) {
			return new DataMap(null, 5, "登陆超时请重新登陆").data;
		}

	}
	

}
