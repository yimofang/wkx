package net.emof.building.web.service;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import net.emof.building.admin.customEXC.EhCacheSessiconException;
import net.emof.building.admin.service.SqlToolseService;
import net.emof.building.dao.QnrMapper;
import net.emof.building.ehcache.EhSessicon;
import net.emof.building.model.Qnr;
import net.emof.building.model.Users;
import net.emof.building.util.DataMap;
import net.emof.building.util.ToolsUtil;

@Service
public class Qnr_web_Service extends SqlToolseService{
	
	@Autowired
	private QnrMapper qnrMapper;
	
	
	/**
	 * 添加问卷名称与说明
	 * @author xilongfei
	 * @creation 2017年12月15日
	 * @param token		登录识别标识
	 * @param name		问卷名称
	 * @param qbrief	问卷说明
	 * @param confid	会议id
	 * @return
	 * @throws EhCacheSessiconException 
	 */
	public DataMap addQurInfo(String token, String name, String qbrief, String confid) throws EhCacheSessiconException {
		DataMap dataMap = new DataMap();
        if (token == null || token.trim().equals("")) {
            dataMap.addMsg_diy_obj(null, 6, "未使用标识");
            return dataMap;
        }
        Users  users = EhSessicon.getTokenInfo(token);
        if (users == null) {
            dataMap.addMsg_diy_list(null, 5, "登录超时，请重新登录");
            return dataMap;
        }
        if(name == null || name.trim().equals("")){
        	dataMap.addMsg_diy_obj(null, 6, "请填写问卷标题");
            return dataMap;
        }
        if(qbrief == null || qbrief.trim().equals("")){
        	dataMap.addMsg_diy_obj(null, 6, "请填写问卷说明");
            return dataMap;
        }
        if(confid == null || confid.trim().equals("")){
        	dataMap.addMsg_diy_obj(null, 6, "请选择会议");
            return dataMap;
        }
        dataMap = selectQurInfo(null, 2, name, qbrief, confid);
        if(dataMap.data.get("row")!= null){
        	dataMap.addMsg_diy_obj(null, 6, "该问卷已创建");
            return dataMap;
        }
        Qnr qnr = new Qnr(ToolsUtil.get_diy_ID(), name, users.getId(), users.getCodes(), confid, qbrief);
        int num = qnrMapper.insertSelective(qnr);
        if(num < 1){
        	dataMap.addMsg_diy_obj(null, 6, "创建失败,请重试");
        }else{
        	dataMap.addMsg_obj(qnr.getId(), 0);
        }
		return dataMap;
	}

	/**
	 * 查询问卷说明与标题
	 * @author xilongfei
	 * @creation 2017年12月15日
	 * @param id		问卷id
	 * @param type		类型  1查询 2判断
	 * @param name		问卷名称
	 * @param qbrief    说明
	 * @param confid	会议id
	 * @return
	 */
	public DataMap selectQurInfo(String id, int type, String name, String qbrief, String confid) {
		DataMap dataMap = new DataMap();
        if((id==null || id.trim().equals("")) && type==1){
        	dataMap.addMsg_diy_obj(null, 6, "未找到该会议");
        	return dataMap;
        }
        String table_name = " qnr as obj ";  //表名
        String find = " obj.id, obj.fname, obj.qbrief ";   //出参
        StringBuilder where = new StringBuilder(" 1=1 ");  //条件
        if(type == 2){ //查询是否已添加
        	where.append(" and obj.fname='"+name+"' and obj.isdelete=1 and obj.qbrief='"+qbrief+"'and obj.confsid='"+confid+"'");
        }else if(type == 3){ //查询会议是否已有问卷
        	where.append(" and obj.confsid='"+confid+"'");
        }else{
        	where.append(" and obj.id='"+id+"' and obj.isdelete=1");
        };
        Map<String, Object> map = this.selectMap(table_name, find, where.toString());
        if(map==null){
        	dataMap.addMsg_diy_obj(null, 6, "问卷不存在");
        }else{
        	dataMap.addMsg_map(map, 0);
        }
        return dataMap;
	}
	
	/**
	 * 
	 * @author xilongfei
	 * @creation 2017年12月16日
	 * @param id		问卷id	
	 * @param name		标题
	 * @param qbrief	说明
	 * @return
	 */
	public DataMap updateQnrInfo(String id, String name, String qbrief) {
		DataMap dataMap = new DataMap();
        if(id==null || id.trim().equals("")){
        	dataMap.addMsg_diy_obj(null, 6, "未找到该会议");
        	return dataMap;
        }
        if(name == null || name.trim().equals("")){
        	dataMap.addMsg_diy_obj(null, 6, "请填写问卷标题");
            return dataMap;
        }
        if(qbrief == null || qbrief.trim().equals("")){
        	dataMap.addMsg_diy_obj(null, 6, "请填写问卷说明");
            return dataMap;
        }
        Qnr qnr = new Qnr();
        qnr.setId(id);
        qnr.setFname(name);
        qnr.setQbrief(qbrief);
        int num = qnrMapper.updateByPrimaryKeySelective(qnr);
        if(num < 1){
        	dataMap.addMsg_diy_obj(null, 6, "修改失败,请重试");
        }else{
        	dataMap.addMsg_diy_obj(null, 0, "已修改");
        }
        return dataMap;
	}
	
	
	 /**
     * 根据会议id 查询问卷下的所有问题与问题选项 
     * @author xilongfei
     * @creation 2017年12月19日
     * @param confid	会议id
     * @return
     */
   public DataMap getQnrDetails(String confid){
	   DataMap dataMap = new DataMap();
	   if(confid==null || confid.trim().equals("")){
       	dataMap.addMsg_diy_obj(null, 6, "未找到会议问卷信息");
       	return dataMap;
       }
	   Qnr qnr = qnrMapper.getQnrDetails(confid);
	   dataMap.addMsg_obj(qnr, 0);
	   return dataMap;
   }
}
